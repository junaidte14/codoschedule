{"version":3,"sources":["_helpers/history.js","store/action.types.js","store/_reducers/auth.reducer.js","store/_reducers/schedules.reducer.js","store/_reducers/todolists.reducer.js","store/_reducers/index.js","store/_reducers/users.reducer.js","store/_reducers/alert.reducer.js","store/store.js","_helpers/auth-header.js","store/_actions/alert.actions.js","config/env.js","_services/auth.service.js","_services/schedule.service.js","_services/todolist.service.js","store/_actions/auth.actions.js","store/_actions/schedule.actions.js","store/_actions/todolist.action.js","_components/PrivateRoute.js","pages/common/Header.js","pages/common/Footer.js","_components/CountDown.js","_components/tasks/TaskDetails.js","_components/Spinner.js","_components/tasks/ListTasks.js","_components/tasks/SearchTasks.js","pages/HomePage.js","pages/LoginPage.js","_components/blockStyles/TodoBlock.js","_components/DraftEditor.js","_components/todolists/SingleList.js","_components/todolists/ShowLists.js","_components/todolists/AddForm.js","_components/todolists/TodoLists.js","_components/tasks/ViewTask.js","_components/tasks/AddTask.js","_components/tasks/UpdateTask.js","_components/todolists/UpdateForm.js","_components/NotFound.js","App/index.js","App/App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","actionTypes","SUCCESS","ERROR","CLEAR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GETBYID_REQUEST","GETBYID_SUCCESS","GETBYID_FAILURE","ADD_REQUEST","ADD_SUCCESS","ADD_FAILURE","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","UPDATE_ORDER_BY","UPDATE_ORDER_DIR","UPDATE_QUERY_TEXT","GETALLBYSCHEDULE_REQUEST","GETALLBYSCHEDULE_SUCCESS","GETALLBYSCHEDULE_FAILURE","user","JSON","parse","localStorage","getItem","initialState","loggedIn","loading","actionLoader","items","orderBy","orderDir","queryText","error","rootReducer","combineReducers","auth","state","action","type","loggingIn","users","alert","message","schedules","data","item","schedule","newItems","map","_id","id","filter","e","todolists","todolist","newItem","hostname","window","location","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","alertActions","success","clear","vars","apiURL","authService","login","email","password","requestOptions","method","headers","body","stringify","fetch","then","handleResponse","setItem","logout","removeItem","response","text","ok","status","statusText","Promise","reject","scheduleService","getAll","getItemById","addSchedule","updateSchedule","deleteSchedule","todolistService","getAllByAttr","attr","abortController","signal","addItem","updateItem","deleteItem","authActions","dispatch","push","scheduleActions","resolve","res","updateOrderBy","updateOrderDir","updateQueryText","todolistActions","PrivateRoute","Component","component","rest","render","props","to","pathname","from","Header","useDispatch","useSelector","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","preventDefault","Footer","href","CountDown","countdowntimer","undefined","years","months","days","hours","minutes","seconds","this","interval","setInterval","timeTillDate","timeFormat","countdown","Date","now","moment","setState","clearInterval","monthsRadius","mapNumber","daysRadius","hoursRadius","minutesRadius","secondsRadius","showBorder","showCircles","radius","SVGCircle","fill","stroke","strokeWidth","d","describeArc","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","join","number","in_min","in_max","out_min","out_max","TaskDetails","deleteTask","showDetails","date","name","notes","ownerName","Spinner","showBlock","style","fontSize","ListTasks","tasks","key","SearchTasks","onChange","searchTasks","target","value","aria-haspopup","changeOrder","role","HomePage","schedulesState","shallowEqual","loaderStatus","myTasks","useEffect","order","filteredTasks","sort","a","b","toLowerCase","includes","toLocaleLowerCase","dir","LoginPage","useState","setEmail","setPassword","submitted","setSubmitted","handleChange","onSubmit","htmlFor","TodoBlock","updateData","bind","blockProps","readOnly","block","getEditorState","getData","checked","has","get","newData","set","editorState","contentState","getCurrentContent","newBlock","merge","newContentState","blockMap","getBlockMap","getKey","EditorState","updateDataOfBlock","React","blockRenderMap","Immutable","Map","element","extendedBlockRenderMap","DefaultDraftBlockRenderMap","myBlockStyleFn","contentBlock","getType","DraftEditor","initialEditorState","rawContentFromStore","convertFromRaw","createWithContent","createEmpty","setEditorState","updateItems","convertToRaw","blockRendererFn","editable","blockStyleFn","SingleList","ShowLists","itemId","todolistsState","AbortController","abort","length","AddForm","setName","setItems","placeholder","tempItem","schedule_id","TodoLists","addForm","setAddForm","cursor","ViewTask","match","params","setLoading","AddTasks","setOwnerName","setDate","time","setTime","setNotes","noValidate","tempTask","rows","cols","UpdateTask","splittedDate","split","UpdateForm","setScheduleId","newitems","setNewItems","NotFound","App","listen","path","exact","Boolean","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.402f49c2.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const actionTypes = {\r\n    ALERT: {\r\n        SUCCESS: 'ALERT_SUCCESS',\r\n        ERROR: 'ALERT_ERROR',\r\n        CLEAR: 'ALERT_CLEAR',\r\n    },\r\n    AUTH: {\r\n        LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n        LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n        LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n        LOGOUT: 'USERS_LOGOUT',\r\n    },\r\n    USERS: {\r\n        GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n        GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n        GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n    },\r\n    SCHEDULES: {\r\n        GETALL_REQUEST: 'SCHEDULES_GETALL_REQUEST',\r\n        GETALL_SUCCESS: 'SCHEDULES_GETALL_SUCCESS',\r\n        GETALL_FAILURE: 'SCHEDULES_GETALL_FAILURE',\r\n\r\n        GETBYID_REQUEST: 'SCHEDULES_GETBYID_REQUEST',\r\n        GETBYID_SUCCESS: 'SCHEDULES_GETBYID_SUCCESS',\r\n        GETBYID_FAILURE: 'SCHEDULES_GETBYID_FAILURE',\r\n\r\n        ADD_REQUEST: 'SCHEDULES_ADD_REQUEST',\r\n        ADD_SUCCESS: 'SCHEDULES_ADD_SUCCESS',\r\n        ADD_FAILURE: 'SCHEDULES_ADD_FAILURE',\r\n\r\n        UPDATE_REQUEST: 'SCHEDULES_UPDATE_REQUEST',\r\n        UPDATE_SUCCESS: 'SCHEDULES_UPDATE_SUCCESS',\r\n        UPDATE_FAILURE: 'SCHEDULES_UPDATE_FAILURE',\r\n\r\n        DELETE_REQUEST: 'SCHEDULES_DELETE_REQUEST',\r\n        DELETE_SUCCESS: 'SCHEDULES_DELETE_SUCCESS',\r\n        DELETE_FAILURE: 'SCHEDULES_DELETE_FAILURE',\r\n\r\n        UPDATE_ORDER_BY: 'SCHEDULES_UPDATE_ORDER_BY',\r\n        UPDATE_ORDER_DIR: 'SCHEDULES_UPDATE_ORDER_DIR',\r\n        UPDATE_QUERY_TEXT: 'SCHEDULES_UPDATE_QUERY_TEXT'\r\n    },\r\n    TODOLISTS: {\r\n        GETALL_REQUEST: 'TODOLISTS_GETALL_REQUEST',\r\n        GETALL_SUCCESS: 'TODOLISTS_GETALL_SUCCESS',\r\n        GETALL_FAILURE: 'TODOLISTS_GETALL_FAILURE',\r\n\r\n        GETALLBYSCHEDULE_REQUEST: 'TODOLISTS_GETALLBYSCHEDULE_REQUEST',\r\n        GETALLBYSCHEDULE_SUCCESS: 'TODOLISTS_GETALLBYSCHEDULE_SUCCESS',\r\n        GETALLBYSCHEDULE_FAILURE: 'TODOLISTS_GETALLBYSCHEDULE_FAILURE',\r\n\r\n        GETBYID_REQUEST: 'TODOLISTS_GETBYID_REQUEST',\r\n        GETBYID_SUCCESS: 'TODOLISTS_GETBYID_SUCCESS',\r\n        GETBYID_FAILURE: 'TODOLISTS_GETBYID_FAILURE',\r\n\r\n        ADD_REQUEST: 'TODOLISTS_ADD_REQUEST',\r\n        ADD_SUCCESS: 'TODOLISTS_ADD_SUCCESS',\r\n        ADD_FAILURE: 'TODOLISTS_ADD_FAILURE',\r\n\r\n        UPDATE_REQUEST: 'TODOLISTS_UPDATE_REQUEST',\r\n        UPDATE_SUCCESS: 'TODOLISTS_UPDATE_SUCCESS',\r\n        UPDATE_FAILURE: 'TODOLISTS_UPDATE_FAILURE',\r\n\r\n        DELETE_REQUEST: 'TODOLISTS_DELETE_REQUEST',\r\n        DELETE_SUCCESS: 'TODOLISTS_DELETE_SUCCESS',\r\n        DELETE_FAILURE: 'TODOLISTS_DELETE_FAILURE',\r\n    }\r\n};","import { actionTypes } from '../action.types';\r\n\r\nlet user = JSON.parse(localStorage.getItem('codoschedule-user'));\r\nconst initialState = user ? { loggedIn: true, user } : {loggedIn: false};\r\n\r\nexport function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        user: action.user\r\n      };\r\n    case actionTypes.AUTH.LOGIN_SUCCESS:\r\n      return {\r\n        loggingIn: false,\r\n        loggedIn: true,\r\n        user: action.user\r\n      };\r\n    case actionTypes.AUTH.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loggingIn: false\r\n      };\r\n    case actionTypes.AUTH.LOGOUT:\r\n      return {\r\n        loggedIn: false\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import { actionTypes } from '../action.types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  actionLoader: false,\r\n  items: [],\r\n  orderBy: 'date',\r\n  orderDir: 'asc',\r\n  queryText: '',\r\n  error: null\r\n};\r\nexport function schedules(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SCHEDULES.GETALL_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.SCHEDULES.GETALL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: action.schedules.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.SCHEDULES.GETALL_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n\r\n    case actionTypes.SCHEDULES.GETBYID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.SCHEDULES.GETBYID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        item: action.schedule.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.SCHEDULES.GETBYID_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n\r\n    case actionTypes.SCHEDULES.ADD_REQUEST:\r\n      return {\r\n        ...state,\r\n        actionLoader: true\r\n      }\r\n    case actionTypes.SCHEDULES.ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionLoader: false\r\n      }\r\n    case actionTypes.SCHEDULES.ADD_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        actionLoader: false\r\n      }\r\n\r\n    case actionTypes.SCHEDULES.UPDATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        actionLoader: true\r\n      }\r\n    case actionTypes.SCHEDULES.UPDATE_SUCCESS:\r\n      {\r\n        const newItems = state.items.map((schedule)=>{\r\n          if(schedule._id === action.id) {\r\n            return action.schedule\r\n          } else return schedule;\r\n        });\r\n        return {\r\n          ...state,\r\n          items: newItems,\r\n          item: action.schedule,\r\n          actionLoader: false\r\n        }\r\n      }\r\n    case actionTypes.SCHEDULES.UPDATE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        actionLoader: false\r\n      }\r\n\r\n    case actionTypes.SCHEDULES.DELETE_REQUEST:\r\n      return {\r\n        ...state,\r\n        actionLoader: true\r\n      }\r\n    case actionTypes.SCHEDULES.DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(e => e._id !== action.schedules.data),\r\n        actionLoader: false\r\n      }\r\n    case actionTypes.SCHEDULES.DELETE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        actionLoader: false\r\n      }\r\n    \r\n    case actionTypes.SCHEDULES.UPDATE_QUERY_TEXT:\r\n      return {\r\n        ...state,\r\n        queryText: action.queryText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { actionTypes } from '../action.types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  actionLoader: false,\r\n  items: [],\r\n  error: null\r\n};\r\nexport function todolists(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.TODOLISTS.GETALL_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.TODOLISTS.GETALL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: action.todolists.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.TODOLISTS.GETALL_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n\r\n    case actionTypes.TODOLISTS.GETALLBYSCHEDULE_REQUEST:\r\n    return {\r\n        ...state,\r\n        loading: true\r\n    }\r\n    case actionTypes.TODOLISTS.GETALLBYSCHEDULE_SUCCESS:\r\n    return {\r\n        ...state,\r\n        items: action.todolists.data,\r\n        loading: false\r\n    }\r\n    case actionTypes.TODOLISTS.GETALLBYSCHEDULE_FAILURE:\r\n    return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n    }\r\n\r\n    case actionTypes.TODOLISTS.GETBYID_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.TODOLISTS.GETBYID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        item: action.todolist.data,\r\n        loading: false\r\n      }\r\n    case actionTypes.TODOLISTS.GETBYID_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n\r\n    case actionTypes.TODOLISTS.ADD_REQUEST:\r\n      return {\r\n        ...state,\r\n        actionLoader: true\r\n      }\r\n    case actionTypes.TODOLISTS.ADD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.newItem],\r\n        actionLoader: false\r\n      }\r\n    case actionTypes.TODOLISTS.ADD_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        actionLoader: false\r\n      }\r\n\r\n    case actionTypes.TODOLISTS.UPDATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        actionLoader: true\r\n      }\r\n    case actionTypes.TODOLISTS.UPDATE_SUCCESS:\r\n      {\r\n        const newItems = state.items.map((item)=>{\r\n          if(item._id === action.id) {\r\n            return action.todolist\r\n          } else return item;\r\n        });\r\n        return {\r\n          ...state,\r\n          items: newItems,\r\n          item: action.todolist,\r\n          actionLoader: false\r\n        }\r\n      }\r\n    case actionTypes.TODOLISTS.UPDATE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        actionLoader: false\r\n      }\r\n\r\n    case actionTypes.TODOLISTS.DELETE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case actionTypes.TODOLISTS.DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(e => e._id !== action.id),\r\n        loading: false\r\n      }\r\n    case actionTypes.TODOLISTS.DELETE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { auth } from './auth.reducer';\r\nimport { users } from './users.reducer';\r\nimport { alert } from './alert.reducer';\r\nimport { schedules } from './schedules.reducer';\r\nimport { todolists } from './todolists.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  users,\r\n  alert,\r\n  schedules,\r\n  todolists\r\n});\r\n\r\nexport default rootReducer;","import { actionTypes } from '../action.types';\r\n\r\nexport function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionTypes.USERS.GETALL_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case actionTypes.USERS.GETALL_SUCCESS:\r\n      return {\r\n        items: action.users\r\n      };\r\n    case actionTypes.USERS.GETALL_FAILURE:\r\n      return { \r\n        error: action.error\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import { actionTypes } from '../action.types';\r\n\r\nexport function alert(state = {}, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ALERT.SUCCESS:\r\n      return {\r\n        type: 'alert-success',\r\n        message: action.message\r\n      };\r\n    case actionTypes.ALERT.ERROR:\r\n      return {\r\n        type: 'alert-danger',\r\n        message: action.message\r\n      };\r\n    case actionTypes.ALERT.CLEAR:\r\n      return {};\r\n    default:\r\n      return state\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './_reducers';\r\n\r\nconst hostname = window.location.hostname;\r\nconst loggerMiddleware = createLogger();\r\nlet dynamic_store;\r\nif (hostname === \"localhost\" || hostname === \"127.0.0.1\") {\r\n    dynamic_store = createStore(\r\n        rootReducer,\r\n        applyMiddleware(\r\n            thunkMiddleware,\r\n            loggerMiddleware\r\n        )\r\n    );\r\n}else{\r\n    dynamic_store = createStore(\r\n        rootReducer,\r\n        applyMiddleware(\r\n            thunkMiddleware\r\n        )\r\n    );\r\n}\r\n\r\nexport const store = dynamic_store;","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('codoschedule-user'));\r\n\r\n    if (user && user.token) {\r\n        return { \r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + user.token \r\n        };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import { actionTypes } from '../action.types';\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction success(message) {\r\n    return { type: actionTypes.ALERT.SUCCESS, message };\r\n}\r\n\r\nfunction error(message) {\r\n    return { type: actionTypes.ALERT.ERROR, message };\r\n}\r\n\r\nfunction clear() {\r\n    return { type: actionTypes.ALERT.CLEAR };\r\n}","const hostname = window.location.hostname;\r\nconst vars = {\r\n    apiURL: (hostname === \"localhost\" || hostname === \"127.0.0.1\") ? 'http://localhost:8000/v1/':'/v1/'\r\n};\r\n\r\nexport default vars;","import vars from '../config/env';\r\n\r\nexport const authService = {\r\n    login,\r\n    logout\r\n};\r\n\r\nfunction login(email, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}auth/login`, requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n        localStorage.setItem('codoschedule-user', JSON.stringify({token: user.token}));\r\n        return user;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('codoschedule-user');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import vars from '../config/env';\r\nimport { authHeader } from '../_helpers';\r\n\r\nexport const scheduleService = {\r\n    getAll,\r\n    getItemById,\r\n    addSchedule,\r\n    updateSchedule,\r\n    deleteSchedule\r\n};\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}schedules`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getItemById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}schedules/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction addSchedule(schedule) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: JSON.stringify(schedule),\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}schedules`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction updateSchedule(id, schedule) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: JSON.stringify(schedule),\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}schedules/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction deleteSchedule(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}schedules/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import vars from '../config/env';\r\nimport { authHeader } from '../_helpers';\r\n\r\nexport const todolistService = {\r\n    getAll,\r\n    getAllByAttr,\r\n    getItemById,\r\n    addItem,\r\n    updateItem,\r\n    deleteItem\r\n};\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getAllByAttr(attr, abortController) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader(),\r\n        signal: abortController.signal\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists/schedule_id/${attr}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getItemById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction addItem(item) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: JSON.stringify(item),\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction updateItem(id, item) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        body: JSON.stringify(item),\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction deleteItem(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${vars.apiURL}todolists/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import { actionTypes } from '../action.types';\r\nimport { authService } from '../../_services';\r\nimport { history } from '../../_helpers';\r\nimport { alertActions } from './';\r\n\r\nexport const authActions = {\r\n    login,\r\n    logout\r\n};\r\n\r\nfunction login(email, password) {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.AUTH.LOGIN_REQUEST, \r\n            email \r\n        });\r\n\r\n        authService.login(email, password)\r\n        .then(\r\n            user => { \r\n                dispatch({ \r\n                    type: actionTypes.AUTH.LOGIN_SUCCESS, \r\n                    user \r\n                });\r\n                history.push('/');\r\n            },\r\n            error => {\r\n                dispatch({ \r\n                    type: actionTypes.AUTH.LOGIN_FAILURE, \r\n                    error \r\n                });\r\n                dispatch(alertActions.error(error));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nfunction logout() {\r\n    authService.logout();\r\n    return { type: actionTypes.AUTH.LOGOUT };\r\n}","import { actionTypes } from '../action.types';\r\nimport { alertActions } from './';\r\nimport { scheduleService } from '../../_services';\r\n\r\nexport const scheduleActions = {\r\n    getAll,\r\n    getItemById,\r\n    addSchedule,\r\n    updateSchedule,\r\n    deleteSchedule,\r\n    updateOrderBy,\r\n    updateOrderDir,\r\n    updateQueryText\r\n};\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.SCHEDULES.GETALL_REQUEST \r\n        });\r\n\r\n        scheduleService.getAll()\r\n        .then(\r\n            schedules => dispatch({ \r\n                type: actionTypes.SCHEDULES.GETALL_SUCCESS, \r\n                schedules \r\n            }),\r\n            error => dispatch({ \r\n                type: actionTypes.SCHEDULES.GETALL_FAILURE, \r\n                error \r\n            })\r\n        );\r\n    };\r\n}\r\n\r\nfunction getItemById(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ \r\n                type: actionTypes.SCHEDULES.GETBYID_REQUEST\r\n            });\r\n    \r\n            scheduleService.getItemById(id)\r\n            .then(\r\n                schedule => {\r\n                    dispatch({ \r\n                        type: actionTypes.SCHEDULES.GETBYID_SUCCESS, \r\n                        schedule \r\n                    });\r\n                    resolve(schedule);\r\n                },\r\n                error => {\r\n                    dispatch({ \r\n                        type: actionTypes.SCHEDULES.GETBYID_FAILURE, \r\n                        error \r\n                    });\r\n                    reject();\r\n                }\r\n            );\r\n        });\r\n    };\r\n}\r\n\r\nfunction addSchedule(schedule) {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.SCHEDULES.ADD_REQUEST \r\n        });\r\n\r\n        scheduleService.addSchedule(schedule)\r\n        .then(\r\n            res => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.ADD_SUCCESS\r\n                });\r\n                dispatch(alertActions.success('Schedule is successfully added!'));\r\n                \r\n            },\r\n            error => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.ADD_FAILURE, \r\n                    error \r\n                });\r\n                dispatch(alertActions.error(error));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nfunction updateSchedule(id, schedule) {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.SCHEDULES.UPDATE_REQUEST \r\n        });\r\n\r\n        scheduleService.updateSchedule(id, schedule)\r\n        .then(\r\n            res => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.UPDATE_SUCCESS,\r\n                    id,\r\n                    schedule\r\n                });\r\n                dispatch(alertActions.success('Schedule is successfully updated!'));\r\n                \r\n            },\r\n            error => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.UPDATE_FAILURE, \r\n                    error \r\n                });\r\n                dispatch(alertActions.error(error));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nfunction deleteSchedule(id) {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.SCHEDULES.DELETE_REQUEST \r\n        });\r\n\r\n        scheduleService.deleteSchedule(id)\r\n        .then(\r\n            schedules => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.DELETE_SUCCESS,\r\n                    schedules\r\n                });\r\n                dispatch(alertActions.success('Schedule is successfully deleted!'));\r\n            },\r\n            error => {\r\n                dispatch({ \r\n                    type: actionTypes.SCHEDULES.DELETE_FAILURE, \r\n                    error \r\n                });\r\n                dispatch(alertActions.error(error));\r\n            }\r\n        );\r\n    };\r\n}\r\n\r\nfunction updateOrderBy(orderBy) {\r\n    return { type: actionTypes.SCHEDULES.UPDATE_ORDER_BY, orderBy};\r\n}\r\n\r\nfunction updateOrderDir(orderDir) {\r\n    return { type: actionTypes.SCHEDULES.UPDATE_ORDER_DIR, orderDir};\r\n}\r\n\r\nfunction updateQueryText(queryText) {\r\n    return { type: actionTypes.SCHEDULES.UPDATE_QUERY_TEXT, queryText};\r\n}","import { actionTypes } from '../action.types';\r\nimport { alertActions } from './';\r\nimport { todolistService } from '../../_services';\r\n\r\nexport const todolistActions = {\r\n    getAll,\r\n    getAllByAttr,\r\n    getItemById,\r\n    addItem,\r\n    updateItem,\r\n    deleteItem,\r\n};\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.TODOLISTS.GETALL_REQUEST \r\n        });\r\n\r\n        todolistService.getAll()\r\n        .then(\r\n            todolists => dispatch({ \r\n                type: actionTypes.TODOLISTS.GETALL_SUCCESS, \r\n                todolists \r\n            }),\r\n            error => dispatch({ \r\n                type: actionTypes.TODOLISTS.GETALL_FAILURE, \r\n                error \r\n            })\r\n        );\r\n    };\r\n}\r\n\r\nfunction getAllByAttr(attr, abortController) {\r\n    return dispatch => {\r\n        dispatch({ \r\n            type: actionTypes.TODOLISTS.GETALLBYSCHEDULE_REQUEST \r\n        });\r\n\r\n        todolistService.getAllByAttr(attr, abortController)\r\n        .then(\r\n            todolists => dispatch({ \r\n                type: actionTypes.TODOLISTS.GETALLBYSCHEDULE_SUCCESS, \r\n                todolists \r\n            }),\r\n            error => dispatch({ \r\n                type: actionTypes.TODOLISTS.GETALLBYSCHEDULE_FAILURE, \r\n                error \r\n            })\r\n        );\r\n    };\r\n}\r\n\r\nfunction getItemById(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ \r\n                type: actionTypes.TODOLISTS.GETBYID_REQUEST\r\n            });\r\n    \r\n            todolistService.getItemById(id)\r\n            .then(\r\n                todolist => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.GETBYID_SUCCESS, \r\n                        todolist \r\n                    });\r\n                    resolve(todolist);\r\n                },\r\n                error => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.GETBYID_FAILURE, \r\n                        error \r\n                    });\r\n                    reject();\r\n                }\r\n            );\r\n        });\r\n    };\r\n}\r\n\r\nfunction addItem(item) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ \r\n                type: actionTypes.TODOLISTS.ADD_REQUEST \r\n            });\r\n\r\n            todolistService.addItem(item)\r\n            .then(\r\n                res => {\r\n                    item._id = res.data;\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.ADD_SUCCESS,\r\n                        newItem: item\r\n                    });\r\n                    dispatch(alertActions.success('Item is successfully added!'));\r\n                    resolve(res);\r\n                },\r\n                error => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.ADD_FAILURE, \r\n                        error \r\n                    });\r\n                    dispatch(alertActions.error(error));\r\n                    reject();\r\n                }\r\n            );\r\n        });\r\n    };\r\n}\r\n\r\nfunction updateItem(id, item) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ \r\n                type: actionTypes.TODOLISTS.UPDATE_REQUEST \r\n            });\r\n\r\n            todolistService.updateItem(id, item)\r\n            .then(\r\n                res => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.UPDATE_SUCCESS,\r\n                        id,\r\n                        todolist: item\r\n                    });\r\n                    dispatch(alertActions.success('Item is successfully updated!'));\r\n                    resolve(res);\r\n                },\r\n                error => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.UPDATE_FAILURE, \r\n                        error \r\n                    });\r\n                    dispatch(alertActions.error(error));\r\n                    reject();\r\n                }\r\n            );\r\n        });\r\n    };\r\n}\r\n\r\nfunction deleteItem(id) {\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            dispatch({ \r\n                type: actionTypes.TODOLISTS.DELETE_REQUEST \r\n            });\r\n\r\n            todolistService.deleteItem(id)\r\n            .then(\r\n                res => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.DELETE_SUCCESS,\r\n                        id\r\n                    });\r\n                    dispatch(alertActions.success('Item is successfully deleted!'));\r\n                    resolve(res);\r\n                },\r\n                error => {\r\n                    dispatch({ \r\n                        type: actionTypes.TODOLISTS.DELETE_FAILURE, \r\n                        error \r\n                    });\r\n                    dispatch(alertActions.error(error));\r\n                    reject();\r\n                }\r\n            );\r\n        });\r\n    };\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('codoschedule-user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authActions } from '../../store/_actions';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => {\r\n        return state.auth.user;\r\n    });\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <Link to=\"/\" className=\"navbar-brand\">codoschedule</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    {/* <li className=\"nav-item active\">\r\n                        <Link to=\"/\" className=\"nav-link\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                    </li> */}\r\n                    {\r\n                        (user) && (\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/add-task\" className=\"nav-link\">Add Task</Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    {\r\n                        (!user) && (\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    {\r\n                        (user) && (\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/\" onClick={(e)=> {e.preventDefault(); dispatch(authActions.logout())}} className=\"nav-link\">Logout</Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nconst Footer = () =>{\r\n    return (\r\n        <footer className=\"text-white py-2 bg-primary\">\r\n            <div className=\"container d-flex \">\r\n                <p>\r\n                    &copy; 2020 CODOPLEX. All rights reserved.\r\n                </p>\r\n                <div className=\"ml-auto\">\r\n                    <a className=\"d-block text-white\" href=\"/terms\">Terms of use</a>\r\n                    <a className=\"d-block text-white\" href=\"/privacy\">Privacy policy</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport countdown from 'countdown';\r\n\r\n//https://www.florin-pop.com/blog/2019/05/countdown-built-with-react/\r\nclass CountDown extends Component {\r\n    state = {\r\n        countdowntimer: undefined,\r\n        years: undefined,\r\n        months: undefined, \r\n        days: undefined,\r\n        hours: undefined,\r\n        minutes: undefined,\r\n        seconds: undefined\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const { timeTillDate, timeFormat } = this.props;\r\n            const countdowntimer = countdown(Date.now(), moment(timeTillDate, timeFormat));\r\n            const years = countdowntimer.years;\r\n            const months = countdowntimer.months;\r\n            const days = countdowntimer.days;\r\n            const hours = countdowntimer.hours;\r\n            const minutes = countdowntimer.minutes;\r\n            const seconds = countdowntimer.seconds;\r\n            this.setState({ countdowntimer, years, months, days, hours, minutes, seconds });\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { years, months, days, hours, minutes, seconds } = this.state;\r\n    \r\n        // Mapping the date values to radius values\r\n        const monthsRadius = mapNumber(months, 12, 0, 0, 360);\r\n        const daysRadius = mapNumber(days, 30, 0, 0, 360);\r\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n        if (!seconds) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"countdown-wrapper\">\r\n                    {(years>0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {years}\r\n                            <span>years</span>\r\n                        </div>\r\n                    )}\r\n                    {(months>0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {this.props.showCircles && (\r\n                                <SVGCircle radius={monthsRadius} />\r\n                            )}\r\n                            {months}\r\n                            <span>months</span>\r\n                        </div>\r\n                    )}\r\n                    {(days > 0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {this.props.showCircles && (\r\n                                <SVGCircle radius={daysRadius} />\r\n                            )}\r\n                            {days}\r\n                            <span>days</span>\r\n                        </div>\r\n                    )}\r\n                    {(hours >= 0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {this.props.showCircles && (\r\n                                <SVGCircle radius={hoursRadius} />\r\n                            )}\r\n                            {hours}\r\n                            <span>hours</span>\r\n                        </div>\r\n                    )}\r\n                    {(minutes >= 0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {this.props.showCircles && (\r\n                                <SVGCircle radius={minutesRadius} />\r\n                            )}\r\n                            {minutes}\r\n                            <span>minutes</span>\r\n                        </div>\r\n                    )}\r\n                    {(seconds >= 0) && (\r\n                        <div className={\"countdown-item \"+ (this.props.showBorder ? 'border border-primary': '')}>\r\n                            {this.props.showCircles && (\r\n                                <SVGCircle radius={secondsRadius} />\r\n                            )}\r\n                            {seconds}\r\n                            <span>seconds</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst SVGCircle = ({ radius }) => (\r\n    <svg className=\"countdown-svg\">\r\n        <path\r\n            fill=\"none\"\r\n            stroke=\"#333\"\r\n            strokeWidth=\"4\"\r\n            d={describeArc(50, 50, 48, 0, radius)}\r\n        />\r\n    </svg>\r\n);\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadians),\r\n        y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle) {\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n    var d = [\r\n        'M',\r\n        start.x,\r\n        start.y,\r\n        'A',\r\n        radius,\r\n        radius,\r\n        0,\r\n        largeArcFlag,\r\n        0,\r\n        end.x,\r\n        end.y\r\n    ].join(' ');\r\n\r\n    return d;\r\n}\r\n\r\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (\r\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n    );\r\n}\r\n\r\nexport default CountDown;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaTrash, FaEdit, FaBars} from 'react-icons/fa';\r\nimport CountDown from './../CountDown.js';\r\n\r\nconst TaskDetails = (props) =>{\r\n\r\n    const {item, deleteTask, user, showDetails} = props;\r\n    return (\r\n        <div className=\"card textcenter mb-2 rounded-0\">\r\n            <div className=\"card-body\">\r\n                <div className=\"task-date ml-auto\">\r\n                    <CountDown \r\n                        timeTillDate={item.date} \r\n                        timeFormat=\"YYYY-MM-DD hh:mm:ss a\" \r\n                        showCircles = {false}\r\n                        showBorder = {true}\r\n                    />\r\n                </div>\r\n                <h5 className=\"card-title\">\r\n                    <span>\r\n                        {item.name}\r\n                    </span>\r\n                </h5>\r\n                <p className=\"card-text\">\r\n                    <span className=\"task-notes\">\r\n                        {item.notes}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div className=\"card-footer text-muted\">\r\n                <div className=\"d-flex flex-row-reverse\">\r\n                    <p className=\"ml-auto mb-0\">\r\n                        <span>\r\n                            {item.ownerName}\r\n                        </span>\r\n                    </p>\r\n                    {\r\n                        (user) && (\r\n                            <>\r\n                            <button className=\"btn btn-sm text-danger\" onClick={() => {deleteTask(item._id)}}>\r\n                                <FaTrash />\r\n                            </button>\r\n                            <Link className=\"btn btn-sm text-primary ml-2\" to={\"/update-task/\"+item._id}>\r\n                                <FaEdit />\r\n                            </Link>\r\n                            {\r\n                                (showDetails) && (\r\n                                    <Link className=\"btn btn-sm text-primary ml-2\" to={\"/tasks/\"+item._id}>\r\n                                        <FaBars />\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskDetails;","import React from 'react';\r\nimport {FaSpinner} from 'react-icons/fa';\r\n\r\nconst Spinner = (props) =>{\r\n    if(props.showBlock){\r\n        return (\r\n            <main className=\"page bg-white\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 bg-white text-center\" style={{fontSize: '70px'}}>\r\n                        <FaSpinner className=\"icon-spin\"/>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }else{\r\n        return (\r\n            <FaSpinner className=\"icon-spin\"/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TaskDetails from './TaskDetails';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ListTasks = (props) =>{\r\n    const state = useSelector(state => {\r\n        return state;\r\n    });\r\n    const user = state.auth.user;\r\n    const loading = state.schedules.actionLoader;\r\n    return (\r\n        <div className=\"task-list item-list mb-3\">\r\n            {loading &&\r\n                <Spinner showBlock={true}/>\r\n            }\r\n            {!loading &&\r\n                props.tasks.map(item => (\r\n                    <TaskDetails item={item} deleteTask={props.deleteTask} user={user} showDetails={true} key={item._id}/>\r\n                ))\r\n            }\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ListTasks;","import React from 'react';\r\n\r\nconst SearchTasks = (props) =>{\r\n    return (\r\n        <div className=\"search-tasks row justify-content-center my-4\">\r\n            <div className=\"col-md-6\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                    id=\"SearchTasks\"\r\n                    type=\"text\"\r\n                    className=\"form-control rounded-0\"\r\n                    aria-label=\"Search Tasks\"\r\n                    onChange={e => props.searchTasks(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary dropdown-toggle rounded-0\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded=\"false\"\r\n                        >\r\n                            Sort by: <span className=\"caret\" />\r\n                        </button>\r\n\r\n                        <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                            <button className={\r\n                                'sort-by dropdown-item ' +\r\n                                (props.orderBy === 'name' ? 'active': '')\r\n                            } href=\"#\"\r\n                            onClick={e => props.changeOrder('name', props.orderDir)}>\r\n                                Task Name\r\n                            </button>\r\n                            <button className={\r\n                                'sort-by dropdown-item ' +\r\n                                (props.orderBy === 'date' ? 'active': '')\r\n                            } href=\"#\"\r\n                            onClick={e => props.changeOrder('date', props.orderDir)}>\r\n                                Date\r\n                            </button>\r\n                            <button className={\r\n                                'sort-by dropdown-item ' +\r\n                                (props.orderBy === 'ownerName' ? 'active': '')\r\n                            } href=\"#\"\r\n                            onClick={e => props.changeOrder('ownerName', props.orderDir)}>\r\n                                Owner\r\n                            </button>\r\n                            <div role=\"separator\" className=\"dropdown-divider\" />\r\n                            <button className={\r\n                                'sort-by dropdown-item ' +\r\n                                (props.orderDir === 'asc' ? 'active': '')\r\n                            } href=\"#\"\r\n                            onClick={e => props.changeOrder(props.orderBy, 'asc')}>\r\n                                Asc\r\n                            </button>\r\n                            <button className={\r\n                                'sort-by dropdown-item ' +\r\n                                (props.orderDir === 'desc' ? 'active': '')\r\n                            } href=\"#\"\r\n                            onClick={e => props.changeOrder(props.orderBy, 'desc')}>\r\n                                Desc\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchTasks;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport {FaSpinner} from 'react-icons/fa';\r\n\r\nimport ListTasks from '../_components/tasks/ListTasks';\r\nimport SearchTasks from '../_components/tasks/SearchTasks';\r\n\r\nimport { scheduleActions } from '../store/_actions';\r\n\r\nconst HomePage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const schedulesState = useSelector(state => state.schedules, shallowEqual);\r\n\r\n    const loaderStatus = schedulesState.loading;\r\n    const myTasks = schedulesState.items;\r\n    useEffect( () => {\r\n        dispatch(scheduleActions.getAll());\r\n    }, [dispatch]);\r\n\r\n    const orderBy = schedulesState.orderBy;\r\n    const orderDir = schedulesState.orderDir;\r\n    const queryText = schedulesState.queryText;\r\n\r\n    const deleteTask = (id) => {\r\n        dispatch(scheduleActions.deleteSchedule(id));\r\n    }\r\n\r\n    const changeOrder = (order, dir) =>{\r\n        dispatch(scheduleActions.updateOrderBy(order));\r\n        dispatch(scheduleActions.updateOrderDir(dir));\r\n    }\r\n\r\n    const searchTasks = (text) =>{\r\n        dispatch(scheduleActions.updateQueryText(text));\r\n    }\r\n\r\n    if(!loaderStatus){\r\n        let order;\r\n        let filteredTasks = [];\r\n        filteredTasks = myTasks;\r\n        if(orderDir === 'asc'){\r\n            order = 1;\r\n        }else{\r\n            order = -1;\r\n        }\r\n        filteredTasks = filteredTasks.sort((a,b) => {\r\n            if(a[orderBy].toLowerCase() < b[orderBy].toLowerCase()){\r\n                return -1*order;\r\n            }else{\r\n                return 1*order;\r\n            }\r\n            }).filter(item => {\r\n            return (\r\n                item['name'].toLowerCase().includes(queryText.toLocaleLowerCase()) || \r\n                item['ownerName'].toLowerCase().includes(queryText.toLocaleLowerCase()) || \r\n                item['notes'].toLowerCase().includes(queryText.toLocaleLowerCase()) \r\n            );\r\n        });\r\n        return (\r\n            <main className=\"page bg-white\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 bg-white\">\r\n                        <SearchTasks \r\n                            orderBy = {orderBy}\r\n                            orderDir = {orderDir}\r\n                            changeOrder = {changeOrder}\r\n                            searchTasks = {searchTasks}\r\n                        />\r\n                        <ListTasks \r\n                            tasks={filteredTasks} \r\n                            deleteTask={deleteTask}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }else{\r\n        return (\r\n            <main className=\"page bg-white\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 bg-white text-center\" style={{fontSize: '70px'}}>\r\n                        <FaSpinner className=\"icon-spin\"/>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport  default HomePage;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../store/_actions';\r\nimport Spinner from '../_components/Spinner';\r\n\r\nconst LoginPage = () =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleChange = (e) =>{\r\n        const { name, value } = e.target;\r\n        if(name === 'email'){\r\n            setEmail(value);\r\n        }else if(name === 'password'){\r\n            setPassword(value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        setSubmitted(true);\r\n        if (email && password) {\r\n            dispatch(authActions.login(email, password));\r\n        }\r\n    }\r\n\r\n    const loggingIn = useSelector(state => {\r\n        return state.auth.loggingIn;\r\n    });\r\n    return (\r\n        <div className=\"card textcenter mt-20 rounded-0\">\r\n            <div className=\"card-body\">\r\n                <h2>Login</h2>\r\n                <p>Only admin can login to the app!</p>\r\n                <form name=\"loginForm\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\" className={'form-control' + (submitted && !email ? ' is-invalid' : '')} name=\"email\" value={email} onChange={handleChange} />\r\n                        {submitted && !email &&\r\n                            <div className=\"invalid-feedback\">email is required</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" className={'form-control' + (submitted && !password ? ' is-invalid' : '')} name=\"password\" value={password} onChange={handleChange} />\r\n                        {submitted && !password &&\r\n                            <div className=\"invalid-feedback\">Password is required</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary mr-2\">Login</button>\r\n                        {loggingIn &&\r\n                            <Spinner showBlock={false}/>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nimport { EditorBlock, EditorState } from 'draft-js';\r\n\r\nconst updateDataOfBlock = (editorState, block, newData) => {\r\n    const contentState = editorState.getCurrentContent();\r\n    const newBlock = block.merge({\r\n      data: newData,\r\n    });\r\n    const newContentState = contentState.merge({\r\n      blockMap: contentState.getBlockMap().set(block.getKey(), newBlock),\r\n    });\r\n    return EditorState.push(editorState, newContentState, 'change-block-type');\r\n};\r\n\r\nclass TodoBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateData = this.updateData.bind(this);\r\n    }\r\n\r\n    updateData(e) {\r\n        if(this.props.blockProps.readOnly){\r\n            e.preventDefault();\r\n        }else{\r\n            const { block, blockProps } = this.props;\r\n            // This is the reason we needed a higher-order function for blockRendererFn\r\n            const { onChange, getEditorState } = blockProps;\r\n            const data = block.getData();\r\n            const checked = (data.has('checked') && data.get('checked') === true);\r\n            const newData = data.set('checked', !checked);\r\n            onChange(updateDataOfBlock(getEditorState(), block, newData));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.block.getData();\r\n        const checked = data.get('checked') === true;\r\n        return (\r\n          <div className={checked ? 'block-todo-completed' : ''}>\r\n            <input type=\"checkbox\" checked={checked} onChange={this.updateData}/>\r\n            <EditorBlock {...this.props} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoBlock;","import React, {useState} from 'react';\r\nimport {Editor, EditorState, DefaultDraftBlockRenderMap, convertToRaw, convertFromRaw} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport TodoBlock from './blockStyles/TodoBlock';\r\n\r\nimport Immutable from 'immutable';\r\n\r\n// The example below deliberately only allows\r\n// 'heading-two' as the only valid block type and\r\n// updates the unstyled element to also become a h2.\r\nconst blockRenderMap = Immutable.Map({\r\n    'todolist': {\r\n        element: 'div'\r\n    }\r\n});\r\n\r\n// Include 'paragraph' as a valid block and updated the unstyled element but\r\n// keep support for other draft default block types\r\nconst extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(blockRenderMap);\r\n\r\nconst myBlockStyleFn = (contentBlock) =>{\r\n    const type = contentBlock.getType();\r\n    if (type === 'todolist') {\r\n      return 'codo-block codo-block-todolist';\r\n    }\r\n}\r\n\r\nconst DraftEditor = (props) =>{\r\n\r\n    const data = props.data;\r\n\r\n    let initialEditorState = null;\r\n    const readOnly = props.readOnly;\r\n\r\n    if (data) {\r\n        const rawContentFromStore = convertFromRaw(JSON.parse(data));\r\n        initialEditorState = EditorState.createWithContent(rawContentFromStore);\r\n    } else {\r\n        initialEditorState = EditorState.createEmpty();\r\n    }\r\n\r\n    const [editorState, setEditorState] = useState(initialEditorState);\r\n\r\n    const getEditorState = () => editorState;\r\n    const onChange = (editorState) => {\r\n        setEditorState(editorState);\r\n        props.updateItems(convertToRaw(editorState.getCurrentContent()));\r\n    }\r\n\r\n    const myBlockRenderer = (contentBlock) => {\r\n        const type = contentBlock.getType();\r\n        if (type === 'todolist') {\r\n          return {\r\n            component: TodoBlock,\r\n            editable: !readOnly,\r\n            props: {\r\n                onChange,\r\n                getEditorState,\r\n                readOnly\r\n            },\r\n          };\r\n        }\r\n    \r\n        if (type === 'unstyled') {\r\n            return {\r\n              component: TodoBlock,\r\n              editable: !readOnly,\r\n              props: {\r\n                onChange,\r\n                getEditorState,\r\n                readOnly\r\n              },\r\n            };\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"draft-editor\">\r\n            <div className=\"draft-editor-wrapper\">\r\n                <Editor \r\n                    editorState={editorState} \r\n                    onChange={onChange} \r\n                    blockRenderMap={extendedBlockRenderMap} \r\n                    blockRendererFn={myBlockRenderer} \r\n                    blockStyleFn={myBlockStyleFn}\r\n                    readOnly={readOnly}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DraftEditor;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaTrash, FaEdit} from 'react-icons/fa';\r\nimport { todolistActions } from '../../store/_actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport DraftEditor from '../DraftEditor';\r\n\r\nconst SingleList = (props) =>{\r\n\r\n    const {data} = props;\r\n    const dispatch = useDispatch();\r\n    const deleteItem = (id) => {\r\n        dispatch(todolistActions.deleteItem(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex-nav-wrapper\">\r\n                <h3>{data.name}</h3>\r\n                <span className=\"flex-nav-spacer\"></span>\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"btn btn-sm text-primary\" to={\"/update-todo/\"+data._id}>\r\n                            <FaEdit />\r\n                        </Link>\r\n                        <button className=\"btn btn-sm text-danger\" onClick={() => {deleteItem(data._id)}}>\r\n                            <FaTrash />\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <DraftEditor data={data.items} readOnly={true}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SingleList;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { todolistActions } from '../../store/_actions';\r\nimport Spinner from '../Spinner';\r\nimport SingleList from './SingleList';\r\n\r\nconst ShowLists = (props) =>{\r\n\r\n    const {itemId} = props;\r\n    const dispatch = useDispatch();\r\n    const todolistsState = useSelector(state => state.todolists, shallowEqual);\r\n    const loading = todolistsState.loading;\r\n    const todolists = todolistsState.items;\r\n    useEffect( () => {\r\n        const abortController = new AbortController();\r\n        dispatch(todolistActions.getAllByAttr(itemId, abortController));\r\n        return () => abortController.abort();\r\n    }, [dispatch, itemId]);\r\n    return (\r\n        <>\r\n            {loading &&\r\n                <Spinner showBlock={true}/>\r\n            }\r\n            {!loading && todolists.length !== 0 &&\r\n                todolists.map(item => (\r\n                    <SingleList data={item} key={item._id}/>\r\n                ))\r\n            }\r\n            {!loading && todolists.length === 0 &&\r\n                <p>No items found</p>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowLists;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { todolistActions, alertActions } from '../../store/_actions';\r\nimport Spinner from '../Spinner';\r\nimport DraftEditor from '../DraftEditor';\r\n\r\nconst AddForm = (props) =>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [items, setItems] = useState({});\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleChange = (e) =>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        switch(name){\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'items':\r\n                setItems(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const updateItems = (items) => {\r\n        setItems(items);\r\n    }\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        let tempItem = {\r\n            name: name,\r\n            schedule_id: props.itemId,\r\n            items: JSON.stringify(items)\r\n        }\r\n        if (tempItem.name && tempItem.items) {\r\n            dispatch(todolistActions.addItem(tempItem)).then(res => {\r\n                setSubmitted(false);\r\n            });\r\n        }else{\r\n            dispatch(alertActions.error('Please fill required fields'));\r\n        }\r\n    }\r\n\r\n    const loading = useSelector(state => {\r\n        return state.todolists.actionLoader;\r\n    });\r\n\r\n    return (\r\n        <div className=\"card textcenter mt-20 rounded-0\">\r\n            <div className=\"card-body\">\r\n                <h2>Add Todo List</h2>\r\n                <div className=\"col-md-12 mb-2\">\r\n                    <input type=\"text\" className={'form-control' + (submitted && !name ? ' is-invalid' : '')} name=\"name\" placeholder=\"Task's Name\" value={name} onChange={handleChange}/>\r\n                    {submitted && !name &&\r\n                        <div className=\"invalid-feedback\">Name is required</div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"col-md-12 mb-2\">\r\n                    <DraftEditor updateItems={updateItems} data={null} readOnly={false}/>\r\n                </div>\r\n\r\n                <div className=\"col-md-12 mb-2\">\r\n                    <button className=\"btn btn-primary ml-auto rounded-0\" onClick={submitForm}>Save</button>\r\n                    {loading &&\r\n                        <Spinner showBlock={false}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddForm;","import React, { useState } from 'react';\r\nimport ShowLists from './ShowLists';\r\nimport AddForm from './AddForm';\r\n\r\nconst TodoLists = (props) =>{\r\n\r\n    const {itemId, user} = props;\r\n    const [addForm, setAddForm] = useState(false);\r\n\r\n    return (\r\n        <div className=\"card textcenter mb-2 rounded-0\">\r\n            <div className=\"card-header flex-nav-wrapper\">\r\n                <span>\r\n                    Todo Lists\r\n                </span>\r\n                <span className=\"flex-nav-spacer\"></span>\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <span className=\"nav-link\" style={{cursor: 'pointer'}} onClick={()=> {setAddForm(!addForm)}}>{(!addForm)? 'Add': 'List'}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {!addForm &&\r\n                    <ShowLists itemId={itemId} user={user}/>\r\n                }\r\n                {addForm &&\r\n                    <AddForm itemId={itemId} setAddForm={setAddForm}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoLists;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { scheduleActions } from '../../store/_actions';\r\nimport { history } from '../../_helpers';\r\nimport TaskDetails from './TaskDetails';\r\nimport TodoLists from '../todolists/TodoLists';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ViewTask = (props) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const itemId = props.match.params.id;\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect( () => {\r\n        dispatch(scheduleActions.getItemById(itemId)).then((res) => {\r\n            setLoading(false);\r\n        });\r\n    }, [itemId, dispatch]);\r\n\r\n    const state = useSelector(state => state, shallowEqual);\r\n    const user = state.auth.user;\r\n    const item = state.schedules.item;\r\n\r\n    const deleteTask = (id) => {\r\n        dispatch(scheduleActions.deleteSchedule(id));\r\n        history.push('/');\r\n    }\r\n\r\n    if(loading){\r\n        return (\r\n            <Spinner showBlock={true}/>\r\n        );\r\n    }else{\r\n        return (\r\n            <>\r\n                <TaskDetails item={item} deleteTask={deleteTask} user={user} showDetails={false}/>\r\n                <TodoLists itemId={item._id} user={user}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewTask;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { scheduleActions, alertActions } from '../../store/_actions';\r\nimport Spinner from '../Spinner';\r\n\r\nconst AddTasks = () =>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [ownerName, setOwnerName] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [notes, setNotes] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    const handleChange = (e) =>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        switch(name){\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'ownerName':\r\n                setOwnerName(value);\r\n                break;\r\n            case 'date':\r\n                setDate(value);\r\n                break;\r\n            case 'time':\r\n                setTime(value);\r\n                break;\r\n            case 'notes':\r\n                setNotes(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const submitTask = (e) =>{\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        let tempTask = {\r\n            name: name,\r\n            ownerName: ownerName,\r\n            date: date + ' ' + time,\r\n            notes: notes\r\n        }\r\n        if (tempTask.name && tempTask.ownerName && tempTask.date) {\r\n            dispatch(scheduleActions.addSchedule(tempTask));\r\n            setName('');\r\n            setOwnerName('');\r\n            setDate('');\r\n            setTime('');\r\n            setNotes('');\r\n            setSubmitted(false);\r\n        }else{\r\n            dispatch(alertActions.error('Please fill required fields'));\r\n        }\r\n    }\r\n\r\n    const loading = useSelector(state => {\r\n        return state.schedules.actionLoader;\r\n    });\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card textcenter mt-20 rounded-0\">\r\n            <div className=\"card-body\">\r\n                <h2>Add Task</h2>\r\n                <form id=\"taskForm\" noValidate onSubmit={submitTask}>\r\n                    <div className=\"form-group form-row\">\r\n                        <label className=\"col-md-2 col-form-label\" htmlFor=\"name\" readOnly>Task Name</label>\r\n                        <div className=\"col-md-10\">\r\n                            <input type=\"text\" className={'form-control' + (submitted && !name ? ' is-invalid' : '')} name=\"name\" placeholder=\"Task's Name\" value={name} onChange={handleChange}/>\r\n                            {submitted && !name &&\r\n                                <div className=\"invalid-feedback\">Name is required</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                        <label className=\"col-md-2 col-form-label\" htmlFor=\"ownerName\">Task Owner</label>\r\n                        <div className=\"col-md-10\">\r\n                            <input type=\"text\" className={'form-control' + (submitted && !ownerName ? ' is-invalid' : '')} name=\"ownerName\" placeholder=\"Owner's Name\" value={ownerName} onChange={handleChange}/>\r\n                            {submitted && !ownerName &&\r\n                                <div className=\"invalid-feedback\">Owner name is required</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                        <label className=\"col-md-2 col-form-label\" htmlFor=\"date\">Date</label>\r\n                        <div className=\"col-md-4\">\r\n                            <input type=\"date\" className={'form-control' + (submitted && !date ? ' is-invalid' : '')} name=\"date\" id=\"date\" value={date} onChange={handleChange}/>\r\n                            {submitted && !date &&\r\n                                <div className=\"invalid-feedback\">Date is required</div>\r\n                            }\r\n                        </div>\r\n                        <label className=\"col-md-2 col-form-label\" htmlFor=\"time\">Time</label>\r\n                        <div className=\"col-md-4\">\r\n                            <input type=\"time\" className={'form-control' + (submitted && !time ? ' is-invalid' : '')} name=\"time\" id=\"time\" value={time} onChange={handleChange}/>\r\n                            {submitted && !time &&\r\n                                <div className=\"invalid-feedback\">Time is required</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row\">\r\n                        <label className=\"col-md-2\" htmlFor=\"notes\">Notes</label>\r\n                        <div className=\"col-md-10\">\r\n                            <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"notes\" id=\"notes\" placeholder=\"Task Notes\" value={notes} onChange={handleChange}/>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div className=\"form-group form-row mb-0\">\r\n                        <div className=\"col-md-12\">\r\n                            <button type=\"submit\" className=\"btn btn-primary ml-auto rounded-0\">Add Task</button>\r\n                            {loading &&\r\n                                <Spinner showBlock={false}/>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTasks;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { scheduleActions, alertActions } from '../../store/_actions';\r\nimport Spinner from '../Spinner';\r\n\r\nconst UpdateTask = (props) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const itemId = props.match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [ownerName, setOwnerName] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [notes, setNotes] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    useEffect( () => {\r\n        dispatch(scheduleActions.getItemById(itemId)).then(res => {\r\n            const data = res.data;\r\n            setName(data.name);\r\n            setOwnerName(data.ownerName);\r\n            const splittedDate = data.date.split(\" \");\r\n            setDate(splittedDate[0]);\r\n            setTime(splittedDate[1]);\r\n            setNotes(data.notes);\r\n        });\r\n    }, [itemId, dispatch]);\r\n\r\n    const state = useSelector(state => state.schedules, shallowEqual);\r\n    const loading = state.loading;\r\n    const actionLoader = state.actionLoader;\r\n\r\n    const handleChange = (e) =>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        switch(name){\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'ownerName':\r\n                setOwnerName(value);\r\n                break;\r\n            case 'date':\r\n                setDate(value);\r\n                break;\r\n            case 'time':\r\n                setTime(value);\r\n                break;\r\n            case 'notes':\r\n                setNotes(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const submitTask = (e) =>{\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        let tempTask = {\r\n            name: name,\r\n            ownerName: ownerName,\r\n            date: date + ' ' + time,\r\n            notes: notes\r\n        }\r\n        if (tempTask.name && tempTask.ownerName && tempTask.date) {\r\n            dispatch(scheduleActions.updateSchedule(itemId, tempTask));\r\n            setSubmitted(false);\r\n        }else{\r\n            dispatch(alertActions.error('Please fill required fields'));\r\n        }\r\n    }\r\n\r\n    if(loading){\r\n        return (\r\n            <Spinner showBlock={true}/>\r\n        );\r\n    }else{\r\n        \r\n        return (\r\n            <div className=\"card textcenter mt-20 rounded-0\">\r\n                <div className=\"card-body\">\r\n                    <h2>Update Task</h2>\r\n                    <form id=\"taskForm\" noValidate onSubmit={submitTask}>\r\n                        <div className=\"form-group form-row\">\r\n                            <label className=\"col-md-2 col-form-label\" htmlFor=\"name\" readOnly>Task Name</label>\r\n                            <div className=\"col-md-10\">\r\n                                <input type=\"text\" className={'form-control' + (submitted && !name ? ' is-invalid' : '')} name=\"name\" placeholder=\"Task's Name\" value={name} onChange={handleChange}/>\r\n                                {submitted && !name &&\r\n                                    <div className=\"invalid-feedback\">Name is required</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"form-group form-row\">\r\n                            <label className=\"col-md-2 col-form-label\" htmlFor=\"ownerName\">Task Owner</label>\r\n                            <div className=\"col-md-10\">\r\n                                <input type=\"text\" className={'form-control' + (submitted && !ownerName ? ' is-invalid' : '')} name=\"ownerName\" placeholder=\"Owner's Name\" value={ownerName} onChange={handleChange}/>\r\n                                {submitted && !ownerName &&\r\n                                    <div className=\"invalid-feedback\">Owner name is required</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"form-group form-row\">\r\n                            <label className=\"col-md-2 col-form-label\" htmlFor=\"date\">Date</label>\r\n                            <div className=\"col-md-4\">\r\n                                <input type=\"date\" className={'form-control' + (submitted && !date ? ' is-invalid' : '')} name=\"date\" id=\"date\" value={date} onChange={handleChange}/>\r\n                                {submitted && !date &&\r\n                                    <div className=\"invalid-feedback\">Date is required</div>\r\n                                }\r\n                            </div>\r\n                            <label className=\"col-md-2 col-form-label\" htmlFor=\"time\">Time</label>\r\n                            <div className=\"col-md-4\">\r\n                                <input type=\"time\" className={'form-control' + (submitted && !time ? ' is-invalid' : '')} name=\"time\" id=\"time\" value={time} onChange={handleChange}/>\r\n                                {submitted && !time &&\r\n                                    <div className=\"invalid-feedback\">Time is required</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"form-group form-row\">\r\n                            <label className=\"col-md-2\" htmlFor=\"notes\">Notes</label>\r\n                            <div className=\"col-md-10\">\r\n                                <textarea className=\"form-control\" rows=\"4\" cols=\"50\" name=\"notes\" id=\"notes\" placeholder=\"Task Notes\" value={notes} onChange={handleChange}/>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"form-group form-row mb-0\">\r\n                            <div className=\"col-md-12\">\r\n                                <button type=\"submit\" className=\"btn btn-primary ml-auto rounded-0 mr-2\">Update Task</button>\r\n                                {actionLoader &&\r\n                                    <Spinner showBlock={false}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateTask;","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaBackward} from 'react-icons/fa';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { todolistActions, alertActions } from '../../store/_actions';\r\nimport Spinner from '../Spinner';\r\nimport DraftEditor from '../DraftEditor';\r\n\r\nconst UpdateForm = (props) =>{\r\n\r\n    const dispatch = useDispatch();\r\n    const itemId = props.match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [schedule_id, setScheduleId] = useState('');\r\n    const [items, setItems] = useState(null);\r\n    const [newitems, setNewItems] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n    useEffect( () => {\r\n        dispatch(todolistActions.getItemById(itemId)).then(res => {\r\n            const data = res.data;\r\n            setName(data.name);\r\n            setItems(data.items);\r\n            setScheduleId(data.schedule_id);\r\n        });\r\n    }, [itemId, dispatch]);\r\n\r\n    const state = useSelector(state => state.todolists, shallowEqual);\r\n    const loading = state.loading;\r\n    const actionLoader = state.actionLoader;\r\n\r\n    const handleChange = (e) =>{\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        switch(name){\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'items':\r\n                setItems(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const updateItems = (items) => {\r\n        setNewItems(items);\r\n    }\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n        let tempItem = {\r\n            name: name,\r\n            schedule_id: schedule_id,\r\n            items: JSON.stringify(newitems)\r\n        }\r\n        if (tempItem.name && tempItem.items) {\r\n            dispatch(todolistActions.updateItem(itemId, tempItem)).then(res => {\r\n                setSubmitted(false);\r\n            });\r\n        }else{\r\n            dispatch(alertActions.error('Please fill required fields'));\r\n        }\r\n    }\r\n\r\n    if(loading || !items){\r\n        return (\r\n            <Spinner showBlock={true}/>\r\n        );\r\n    }else{\r\n        return (\r\n            <div className=\"card textcenter mt-20 rounded-0\">\r\n                <div className=\"card-header flex-nav-wrapper\">\r\n                    <span>Update</span>\r\n                    <span className=\"flex-nav-spacer\"></span>\r\n                    <Link className=\"btn btn-sm text-primary\" to={\"/tasks/\"+schedule_id}>\r\n                        <FaBackward />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"col-md-12 mb-2\">\r\n                        <input type=\"text\" className={'form-control' + (submitted && !name ? ' is-invalid' : '')} name=\"name\" placeholder=\"Task's Name\" value={name} onChange={handleChange}/>\r\n                        {submitted && !name &&\r\n                            <div className=\"invalid-feedback\">Name is required</div>\r\n                        }\r\n                    </div>\r\n    \r\n                    <div className=\"col-md-12 mb-2\">\r\n                        <DraftEditor updateItems={updateItems} data={items} readOnly={false}/>\r\n                    </div>\r\n    \r\n                    <div className=\"col-md-12 mb-2\">\r\n                        <button className=\"btn btn-primary ml-auto rounded-0\" onClick={submitForm}>Save</button>\r\n                        {actionLoader &&\r\n                            <Spinner showBlock={false}/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateForm;","import React from 'react';\r\n\r\nconst NotFound = () =>{\r\n    return (\r\n        <h2>404: Page Not Found.</h2>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import App from './App';\r\nexport default App;","import React from 'react';\r\nimport {\r\n  Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { history } from '../_helpers';\r\nimport { alertActions } from '../store/_actions';\r\nimport { PrivateRoute } from '../_components/PrivateRoute';\r\nimport Header from '../pages/common/Header';\r\nimport Footer from '../pages/common/Footer';\r\nimport HomePage from '../pages/HomePage';\r\nimport LoginPage from '../pages/LoginPage';\r\nimport ViewTask from '../_components/tasks/ViewTask';\r\nimport AddTasks from '../_components/tasks/AddTask';\r\nimport UpdateTask from '../_components/tasks/UpdateTask';\r\nimport UpdateForm from '../_components/todolists/UpdateForm';\r\nimport NotFound from '../_components/NotFound';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const alert = useSelector(state => state.alert);\r\n  const dispatch = useDispatch();\r\n  history.listen((location, action) => {\r\n      dispatch(alertActions.clear());\r\n  });\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Header></Header>\r\n      <div className=\"bg-white app-body\">\r\n        <div className=\"container\">\r\n          {alert.message &&\r\n            <div className={`alert ${alert.type}`}>{alert.message}</div>\r\n          }\r\n          <Switch>\r\n            <Route path=\"/\" component={HomePage} exact/>\r\n            <Route path=\"/tasks/:id\" component={ViewTask}/>\r\n            <PrivateRoute path=\"/add-task\" component={AddTasks} />\r\n            <PrivateRoute path=\"/update-task/:id\" component={UpdateTask}/>\r\n            <PrivateRoute path=\"/update-todo/:id\" component={UpdateForm}/>\r\n            <Route path=\"/login\" component={LoginPage}/>\r\n            <Route component={NotFound}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'jquery/dist/jquery.js';\r\nimport 'popper.js/dist/umd/popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './_helpers';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}